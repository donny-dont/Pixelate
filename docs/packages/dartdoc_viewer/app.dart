// Copyright (c) 2013, the Dart project authors.  Please see the AUTHORS file
// for details. All rights reserved. Use of this source code is governed by a
// BSD-style license that can be found in the LICENSE file.

/**
 * This application displays documentation generated by the docgen tool
 * found at dart-repo/dart/pkg/docgen.
 *
 * The Yaml file outputted by the docgen tool will be read in to
 * generate [Page] and [Category] and [CompositeContainer].
 * Pages, Categories and CategoryItems are used to format and layout the page.
 */
// TODO(janicejl): Add a link to the dart docgen landing page in future.
library web.app;

import 'dart:html' show Element, querySelector, window, ScrollAlignment,
    Event, AnchorElement;

import 'package:polymer/polymer.dart';

import 'shared.dart';
import 'viewer.dart';

import 'package:dartdoc_viewer/location.dart';

/// The [Viewer] object being displayed.
final Viewer viewer = new Viewer(redirectToDartlang: false);

/// The path of this app on startup.
String _pathname;

/// The latest url reached by a popState event.
String location;

/// Listens for browser navigation and acts accordingly.
void startHistory() {
  // Allow for the location to be in the hash, in the old style.
  var hashLocation = parseFragmentLocation();
  if (hashLocation != null && !hashLocation.isEmpty || !useHistory) {
    location = hashLocation;
  } else {
    location = window.location.pathname + window.location.hash;
  }
  window.onPopState.listen(navigate);
}

/// Read the old-style URL fragment.
String parseFragmentLocation() {
  var hash = locationDeprefixed(window.location.hash);
  return hash.startsWith(ID_STRING) ? '' : hash;
}

void navigate(event) {
  // TODO(alanknight): Should we be URI encoding/decoding this?
  var newLocation = window.location.pathname + window.location.hash;
  if (!useHistory) newLocation = locationDeprefixed(window.location.hash);
  if (viewer.homePage != null) {
    viewer.handleLink(newLocation, false);
  }
}

/// Handles browser navigation.
void initApp() {
  Polymer.onReady.then((_) {
    window.onResize.listen((event) {
      viewer.isDesktop = window.innerWidth > DESKTOP_SIZE_BOUNDARY;
      dartdocMain.collapseSearchAndOptionsIfNeeded();
      dartdocMain.hideOrShowNavigation();
    });

    dartdocMain.hideOrShowNavigation();

    startHistory();
    // If a user navigates to a page other than the homepage, the viewer
    // must first load fully before navigating to the specified page.
    viewer.finished.then((_) {
      if (location != null && location != '') {
        viewer.handleLink(location, useHistory);
      } else {
        viewer.currentPage = viewer.startPage;
      }
    });
  });
}
